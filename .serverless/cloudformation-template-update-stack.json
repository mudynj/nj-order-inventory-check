{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GetOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-getOrder"
      }
    },
    "UpdateOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-updateOrder"
      }
    },
    "GetInventoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-getInventory"
      }
    },
    "MatchItemWithInventoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-matchItemWithInventory"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "app",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "app",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1602810749890-2020-10-16T01:12:29.890Z/app.zip"
        },
        "FunctionName": "app-dev-getOrder",
        "Handler": "new_order.php",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 6,
        "Description": "Fetches orders from order API",
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74:14"
        ]
      },
      "DependsOn": [
        "GetOrderLogGroup"
      ]
    },
    "GetOrderLambdaVersionOXlfzOuxG9LmKYy7Dk4PWmxAEhSS8bO46BDlMafkuI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetOrderLambdaFunction"
        },
        "CodeSha256": "zfZeZVQ9q0aghLxWG6dw88c1KNt/o2xfKBBcHnryfkA=",
        "Description": "Fetches orders from order API"
      }
    },
    "UpdateOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1602810749890-2020-10-16T01:12:29.890Z/app.zip"
        },
        "FunctionName": "app-dev-updateOrder",
        "Handler": "update_order.php",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 6,
        "Description": "updates orders on order API",
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74:14"
        ]
      },
      "DependsOn": [
        "UpdateOrderLogGroup"
      ]
    },
    "UpdateOrderLambdaVersionDtcyGDPR8L7ko3LubzX3AhvFzFgdLJzATLr3HOD1n2g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateOrderLambdaFunction"
        },
        "CodeSha256": "zfZeZVQ9q0aghLxWG6dw88c1KNt/o2xfKBBcHnryfkA=",
        "Description": "updates orders on order API"
      }
    },
    "GetInventoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1602810749890-2020-10-16T01:12:29.890Z/app.zip"
        },
        "FunctionName": "app-dev-getInventory",
        "Handler": "inventory.php",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 6,
        "Description": "Fetches Inventory from Inventory API",
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74:14"
        ]
      },
      "DependsOn": [
        "GetInventoryLogGroup"
      ]
    },
    "GetInventoryLambdaVersionXIRzahv5XmxORycCEc0MfHClheRF9hTvn5LSNuJ0Ng": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetInventoryLambdaFunction"
        },
        "CodeSha256": "zfZeZVQ9q0aghLxWG6dw88c1KNt/o2xfKBBcHnryfkA=",
        "Description": "Fetches Inventory from Inventory API"
      }
    },
    "MatchItemWithInventoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1602810749890-2020-10-16T01:12:29.890Z/app.zip"
        },
        "FunctionName": "app-dev-matchItemWithInventory",
        "Handler": "match_Item_Inventory.php",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 6,
        "Description": "Fetches Inventory from Inventory API",
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74:14"
        ]
      },
      "DependsOn": [
        "MatchItemWithInventoryLogGroup"
      ]
    },
    "MatchItemWithInventoryLambdaVersionJeUeK9C1pQa1kjJmyioM2BYeLBy72cqbZAhTGGYrU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MatchItemWithInventoryLambdaFunction"
        },
        "CodeSha256": "zfZeZVQ9q0aghLxWG6dw88c1KNt/o2xfKBBcHnryfkA=",
        "Description": "Fetches Inventory from Inventory API"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "GetOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetOrderLambdaVersionOXlfzOuxG9LmKYy7Dk4PWmxAEhSS8bO46BDlMafkuI"
      }
    },
    "UpdateOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateOrderLambdaVersionDtcyGDPR8L7ko3LubzX3AhvFzFgdLJzATLr3HOD1n2g"
      }
    },
    "GetInventoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetInventoryLambdaVersionXIRzahv5XmxORycCEc0MfHClheRF9hTvn5LSNuJ0Ng"
      }
    },
    "MatchItemWithInventoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MatchItemWithInventoryLambdaVersionJeUeK9C1pQa1kjJmyioM2BYeLBy72cqbZAhTGGYrU"
      }
    }
  }
}